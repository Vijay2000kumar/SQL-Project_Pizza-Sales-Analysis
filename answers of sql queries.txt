SQL Queries
Basic Queries

1) Retrieve the total number of orders placed:
'''
SELECT COUNT(*) AS total_orders
FROM order_id;
'''
2) Calculate the total revenue generated from pizza sales:

'''
SELECT SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id;
'''
3)Identify the highest-priced pizza:

'''
SELECT pizza_id, price
FROM pizza_id
ORDER BY price DESC
LIMIT 1;
'''
4) Identify the most common pizza size ordered:

'''
SELECT size, COUNT(*) AS count
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
GROUP BY size
ORDER BY count DESC
LIMIT 1;

5)List the top 5 most ordered pizza types along with their quantities:

'''
SELECT pt.name, SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
JOIN pizzatype_id pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_quantity DESC
LIMIT 5;
'''
2]Intermediate Queries

1)Join the necessary tables to find the total quantity of each pizza category ordered:

'''
SELECT pt.category, SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
JOIN pizzatype_id pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category;

2) Determine the distribution of orders by hour of the day:
'''
SELECT HOUR(TIME(time)) AS order_hour, COUNT(*) AS order_count
FROM order_id
GROUP BY order_hour
ORDER BY order_hour;
'''

3)Join relevant tables to find the category-wise distribution of pizzas:

'''
SELECT pt.category, COUNT(od.order_details_id) AS count
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
JOIN pizzatype_id pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category;

4)Group the orders by date and calculate the average number of pizzas ordered per day:

'''
SELECT date, AVG(total_quantity) AS avg_pizzas_per_day
FROM (
    SELECT date, SUM(quantity) AS total_quantity
    FROM order_details od
    JOIN order_id o ON od.order_id = o.order_id
    GROUP BY date
) daily_orders
GROUP BY date;

5)Determine the top 3 most ordered pizza types based on revenue:

'''
SELECT pt.name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
JOIN pizzatype_id pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_revenue DESC
LIMIT 3;
'''
3]Advanced Queries

1)Calculate the percentage contribution of each pizza type to total revenue:

'''
SELECT pt.name, 
       SUM(od.quantity * p.price) / (SELECT SUM(quantity * price) FROM order_details JOIN pizza_id ON order_details.pizza_id = pizza_id.pizza_id) * 100 AS revenue_percentage
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
JOIN pizzatype_id pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name;
'''

2)Analyze the cumulative revenue generated over time:

'''
SELECT date, SUM(daily_revenue) OVER (ORDER BY date) AS cumulative_revenue
FROM (
    SELECT date, SUM(od.quantity * p.price) AS daily_revenue
    FROM order_details od
    JOIN order_id o ON od.order_id = o.order_id
    JOIN pizza_id p ON od.pizza_id = p.pizza_id
    GROUP BY date
) daily_revenue;	

''''

3)Determine the top 3 most ordered pizza types based on revenue for each pizza category:

'''
SELECT pt.category, pt.name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN pizza_id p ON od.pizza_id = p.pizza_id
JOIN pizzatype_id pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.category, pt.name
ORDER BY pt.category, total_revenue DESC
LIMIT 3;